"""
Django settings for escalasv1 project.

Generated by 'django-admin startproject' using Django 3.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""
import os
from pathlib import Path

from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent
#DATA_DIR = BASE_DIR.parent / 'data' / 'web'

# DOTENV
load_dotenv(BASE_DIR.parent / 'dotenv_files' / '.env', override=True)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'change-me')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(int(os.getenv('DEBUG', 0)))

# TEMPLATE_DEBUG = False

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    #meus app
    'core',
    'pessoal',
    'previsao',
    'servico',
    'usuario',


    #apps de terceiros, instalados via pip install
    'widget_tweaks', # usada para renderizar os campos dos forms nos templates
    'dbbackup',  # adicionando django-dbbackup
    # 'sms', #usado para enviar sms, porém, não foi implementado pq não encontrei apps livre, só proprietário!
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'escalasv1.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'escalasv1.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases
if DEBUG:
    DATABASES = {
        'default': {
            'ENGINE': os.getenv('DB_ENGINE', 'change-me'),
            'NAME': 'escaladebug',
            'USER': os.getenv('POSTGRES_USER', 'change-me'),
            'PASSWORD': os.getenv('POSTGRES_PASSWORD', 'change-me'),
            'HOST': os.getenv('POSTGRES_HOST', 'change-me'),
            'PORT': os.getenv('POSTGRES_PORT', 'change-me'),
        }
    }
else:
    DATABASES = {
        'default': {
            'ENGINE': os.getenv('DB_ENGINE', 'change-me'),
#            'NAME': os.getenv('POSTGRES_DB', 'change-me'),
            'NAME': 'escaladebug',
            'USER': os.getenv('POSTGRES_USER', 'change-me'),
            'PASSWORD': os.getenv('POSTGRES_PASSWORD', 'change-me'),
            'HOST': os.getenv('POSTGRES_HOST', 'change-me'),
            'PORT': os.getenv('POSTGRES_PORT', 'change-me'),
        }
    }
    # SECURE_SSL_REDIRECT     = True
    # CSRF_COOKIE_SECURE      = True
    # SESSION_COOKIE_SECURE   = True
    # SECURE_HSTS_SECONDS     = True


# AUTENTICAÇÃO
LOGIN_URL = 'usuario:login'
LOGIN_REDIRECT_URL = 'core:home'
LOGOUT_REDIRECT_URL = 'core:home'
LOGOUT_URL = 'usuario:logout'
AUTH_USER_MODEL = 'usuario.User'


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = True

DATE_INPUT_FORMATS = ['%d/%m/%Y']


# Honor the 'X-Forwarded-Proto' header for request.is_secure()
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# Allow all host headers
ALLOWED_HOSTS = [
    h.strip() for h in os.getenv('ALLOWED_HOSTS', '').split(',')
    if h.strip()
]

PROJECT_ROOT = os.path.abspath(os.path.join(__file__, os.pardir))

#==================== ADD ON 04FEV24 =========================#
STATIC_URL = '/static/'

#STATICFILES_DIRS = [ os.path.join(BASE_DIR,'core/static') ] // era assim antes de introduzir o .env file
STATICFILES_DIRS = [ Path.joinpath(BASE_DIR.parent,'core/static') ]


STATIC_ROOT = os.path.join(BASE_DIR, 'static')

#=============================================================#

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Funcionando perfeitamente
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'seuemail'
EMAIL_HOST_PASSWORD ='S' # past the key or password app here
EMAIL_PORT = 587
EMAIL_USE_TLS = True
DEFAULT_FROM_EMAIL = 'seuemail'

"""
try:
    from escalasv1.local_settings import *
except ImportError:
    pass
"""

DBBACKUP_STORAGE = 'django.core.files.storage.FileSystemStorage' #o que salvar
DBBACKUP_STORAGE_OPTIONS = {'location': 'backups/'} # onde salvar