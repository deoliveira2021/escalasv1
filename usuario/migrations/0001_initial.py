# Generated by Django 3.2.18 on 2023-03-04 23:26

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=30, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[\\w.@+-]+$'), 'O nome de usuário só pode conter letras, digitos ou os seguintes caracteres: @/./+/-/_', 'invalid')], verbose_name='Nome de Usuário')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('nome', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nome Completo')),
                ('cpf', models.CharField(max_length=11, null=True, validators=[django.core.validators.RegexValidator(re.compile('[0-9]'), 'CPF só pode conter digitos de 0 a 9', 'invalid')], verbose_name='CPF')),
                ('nome_guerra', models.CharField(blank=True, max_length=40, null=True, verbose_name='Nome de Guerra')),
                ('posto', models.IntegerField(blank=True, choices=[(5, 'Cel'), (6, 'T Cel'), (7, 'Maj'), (8, 'Cap'), (9, '1º Ten'), (10, '2º Ten'), (11, 'Asp'), (12, 'S Ten'), (13, '1º Sgt'), (14, '2º Sgt'), (15, '3º Sgt'), (16, 'Cb'), (17, 'SD')], null=True, verbose_name='Posto/Graduação')),
                ('sexo', models.IntegerField(blank=True, choices=[(1, 'Masculino'), (2, 'Feminino')], null=True, verbose_name='Gênero')),
                ('tel1', models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefone 1')),
                ('tel2', models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefone 2')),
                ('data_nasc', models.DateField(blank=True, null=True, verbose_name='Data Nascimento')),
                ('data_praca', models.DateField(blank=True, null=True, verbose_name='Data de Praça')),
                ('is_active', models.BooleanField(blank=True, default=True, verbose_name='Está ativo?')),
                ('is_staff', models.BooleanField(blank=True, choices=[(1, 'SIM'), (0, 'NÃO')], default=0, verbose_name='Administrador?')),
                ('data_cadastro', models.DateTimeField(auto_now_add=True, verbose_name='Data de Cadastro')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
        ),
        migrations.CreateModel(
            name='PasswordReset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, unique=True, verbose_name='Chave')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('confirmed', models.BooleanField(blank=True, default=False, verbose_name='Confirmado?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resets', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Nova Senha',
                'verbose_name_plural': 'Novas Senhas',
                'ordering': ['-created_at'],
            },
        ),
    ]
